[
  {
    "title": "Digital Nostalgia and the Death of the Personal Website",
    "date": "2025-08-03T16:30:00Z",
    "tags": ["nostalgia", "web", "personal", "internet"],
    "content": {
      "en": [
        "There was a time when everyone had their own little corner of the internet. Not a profile on some platform owned by a corporation, but an actual website. A place that was theirs. Geocities neighborhoods, Angelfire sites with auto-playing MIDI files, personal blogs hosted on whatever free service you could find.",
        "These sites were ugly by today's standards. Blinking text, comic sans fonts, backgrounds that hurt your eyes. But they had something that's missing from the modern web: personality. Soul. They were digital extensions of people's bedrooms - messy, personal, authentic.",
        "Now we have social media profiles that all look the same, generated by algorithms designed to maximize engagement. We've traded our weird little digital homes for sterile corporate apartments. The internet feels smaller now, even though it's bigger than ever. Maybe that's why sites like this one exist - as digital archaeology, preserving the memory of what the web used to be.",
        "Maintaining a personal website today feels like a small act of resistance. It forces you to think about what you want to publish when there is no instant validation or built-in analytics nudging you toward attention-grabbing bait. You choose the layout, the colors, the tone — you own the friction and the flaws.",
        "There are practical reasons to keep a personal site too: control over your content, longevity, and the ability to experiment without harming your algorithmic reach. A static site with a few well-organized pages can act as a stable archive, a portfolio, and an experimental playground all at once.",
        "If you're nostalgic for the era of personal pages, start small: a single HTML page, a curated list of links, snippets of writing. Host it somewhere reliable and let it be messy. The web needs more people who remember how to make something that isn't optimized for ad impressions."
      ],
      "lt": [
        "Buvo laikas, kai kiekvienas turėjo savo kampelį internete. Ne profilį kokioje nors korporacijos valdomoje platformoje, o tikrą svetainę. Vietą, kuri priklausė jam. Geocities kaimynystės, Angelfire puslapiai su automatiškai grojančiomis MIDI melodijomis, asmeniniai tinklaraščiai bet kokioje nemokamoje tarnyboje.",
        "Šios svetainės šiandienos standartais buvo negražios. Mirksintys tekstai, komiksų šriftai, akį žeidžiantys fonai. Tačiau jos turėjo tai, ko trūksta šiuolaikiniam internetui: asmenybę. Sielą. Tai buvo skaitmeniniai žmonių miegamųjų pratęsimai – netvarkingi, asmeniški, autentiški.",
        "Dabar turime socialinių tinklų profilius, kurie visi atrodo vienodai, sukurti algoritmų, siekiančių maksimalaus įsitraukimo. Savo keistus skaitmeninius namus iškeitėme į sterilius korporatyvinius butus. Internetas dabar atrodo mažesnis, nors iš tikrųjų jis didesnis nei bet kada. Gal todėl tokios svetainės kaip ši egzistuoja – kaip skaitmeninė archeologija, sauganti prisiminimą apie tai, koks buvo internetas."
      ]
    }
  },
  {
    "title": "Why Modern Webdev is a Dumpster Fire",
    "date": "2025-07-30T14:00:00Z",
    "tags": ["webdev", "rant", "javascript"],
    "content": {
      "en": [
        "Remember when you could just make an HTML file, upload it via FTP, and you had a website? I remember. Now you need a masters degree in package management just to make a 'hello world' app that weighs 400MB.",
        "We're running transpilers to turn javascript into javascript, using 500 dependencies to pad a string, and acting like virtual DOMs are a gift from god. It's a mess. We're building houses of cards on a foundation of sand, and we celebrate every time we add another floor without it collapsing immediately. Anyway, here's my tutorial on how to set up a React project with 85 build steps.",
        "The problem isn't just tool complexity — it's the cultural incentives. Metrics, optimizers, and premature abstraction push teams to add ever more layers instead of asking whether they need those layers at all. The cheapest, fastest solution is often the most elegant, but it rarely gets applause in the bandwidth-obsessed world of modern web development.",
        "There are alternatives: embrace minimalism, use fewer dependencies, prefer progressive enhancement, and prioritize maintainability over micro-optimizations that only matter at at-scale. Ship slower and smaller: a lean codebase is easier to reason about, less likely to rot, and kinder to end users on slow connections.",
        "If you work on web projects, try a constraint exercise: build a small interactive feature without installing any new packages. You'll be surprised how often native browser APIs are enough. Then, when you do add a dependency, make it count."
      ],
      "lt": [
        "Prisimeni laikus, kai galėjai tiesiog sukurti HTML failą, įkelti jį per FTP ir jau turi svetainę? Aš prisimenu. Dabar reikia magistro laipsnio paketų valdyme, kad sukurtum 'hello world' programą, kuri sveria 400MB.",
        "Dabar naudojame transpilatorius, kad paverstume javascript į javascript, naudojame 500 priklausomybių, kad pridėtume tarpą eilutėje, ir elgiamės, lyg virtualūs DOM būtų dievo dovana. Viskas chaotiška. Statome kortų namelius ant smėlio pagrindo ir džiaugiamės kiekvieną kartą, kai pridedame dar vieną aukštą, kuris iš karto nesugriūna. Beje, štai mano pamoka, kaip sukurti React projektą su 85 build žingsniais."
      ]
    }
  },
  {
    "title": "The Aesthetics of Decay",
    "date": "2025-07-25T09:00:00Z",
    "tags": ["aesthetics", "vaporwave", "design"],
    "content": {
      "en": [
        "There's something beautiful about forgotten things. Rusted signs, abandoned buildings, corrupted JPEGs, dead geocities pages. It's the digital and physical equivalent of a skull - a memento mori. A reminder that everything we build, everything we are, will eventually fall apart.",
        "This is why glitch art, vaporwave, and brutalism resonate. They embrace the imperfection and the inevitable decay. It's a rebellion against the slick, sterile, corporate-friendly design that dominates the modern internet. It's an aesthetic that admits we're all just temporary files in a failing hard drive.",
        "Decay in design can be literal — patina on a metal surface or a broken GIF — or conceptual, like intentionally lo-fi typography and layout. When designers use decay deliberately, it creates emotional texture: nostalgia, melancholy, or even humor. It can make a website feel lived-in rather than mass-produced.",
        "But there's also a political edge: celebrating the worn and the obsolete pushes back on the relentless push for the new. Not everything should be polished; some experiences should feel fragile. That fragility invites reflection, not constant consumption.",
        "If you're making work that leans toward decay, be intentional. Let the glitch be a language, not an accident. Use color, rhythm, and contrast to balance the grit so your audience experiences the emotion rather than just confusion."
      ],
      "lt": [
        "Yra kažkas gražaus užmirštuose dalykuose. Surūdiję ženklai, apleisti pastatai, sugadinti JPEG'ai, mirę geocities puslapiai. Tai skaitmeninis ir fizinis kaukolės atitikmuo – memento mori. Primena, kad viskas, ką kuriame, viskas, kas esame, galiausiai subyrės.",
        "Todėl glitch menas, vaporwave ir brutalizmas taip žavi. Jie priima netobulumą ir neišvengiamą nykimą. Tai maištas prieš blizgų, sterilų, korporatyvinį dizainą, kuris dominuoja šiuolaikiniame internete. Tai estetika, kuri pripažįsta, kad visi esame tik laikini failai gendančiame kietajame diske."
      ]
    }
  }
]
